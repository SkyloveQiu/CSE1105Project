/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 22 22:57:33 GMT 2020
 */

package nl.tudelft.oopp.group43.project.models;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.Set;
import nl.tudelft.oopp.group43.project.models.Building;
import nl.tudelft.oopp.group43.project.models.BuildingFoodProduct;
import nl.tudelft.oopp.group43.project.models.Room;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Building_ESTest extends Building_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Building building0 = new Building(1097);
      building0.setRooms((Set) null);
      building0.getRooms();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Building building0 = new Building();
      building0.setOpeningHours("6");
      building0.getOpeningHours();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Building building0 = new Building();
      building0.getFoodOrders();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Building building0 = new Building(620, "com.fasterxml.jackson.annotation.JsonProperty$Access", "com.fasterxml.jackson.annotation.JsonProperty$Access", (String) null);
      building0.setBuildingNumber((-4942));
      building0.getBuildingNumber();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Building building0 = new Building((-1), "", "", "");
      building0.setBuildingName("wU+V6a(*D[lHk\">V+z");
      building0.getBuildingName();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Building building0 = new Building((-1), "", "", "");
      building0.setBuildingFoodProducts((Set) null);
      building0.getBuildingFoodProducts();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Building building0 = new Building();
      building0.setBikes((Set) null);
      building0.getBikes();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Building building0 = new Building();
      building0.setBikeReservationsForBuildingStart((Set) null);
      building0.getBikeReservationsForBuildingStart();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Building building0 = new Building();
      building0.setBikeReservationsForBuildingEnd((Set) null);
      building0.getBikeReservationsForBuildingEnd();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Building building0 = new Building(30, ":3gPXNkhNTlsxe%,", ":3gPXNkhNTlsxe%,", "WBW@;  p");
      building0.getAddress();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Building building0 = new Building((-1), "", "", "");
      building0.getAddress();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Building building0 = new Building("");
      building0.getOpeningHours();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Building building0 = new Building();
      building0.getBikeReservationsForBuildingEnd();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Building building0 = new Building("");
      building0.getBuildingName();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Building building0 = new Building("");
      building0.getBuildingNumber();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Building building0 = new Building("");
      building0.setBuildingNumber(1310);
      building0.getBuildingNumber();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Building building0 = new Building("");
      building0.getAddress();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Building building0 = new Building("");
      building0.setAddress("");
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Building building0 = new Building("");
      building0.setOpeningHours("");
      building0.getOpeningHours();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Building building0 = new Building("");
      building0.setBuildingName((String) null);
      building0.getBuildingName();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Building building0 = new Building();
      Set set0 = building0.getBikes();
      building0.setRooms(set0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Building building0 = new Building(9, "DEFAULT", "DEFAULT", "DEFAULT", (Set) null, (Set) null, (Set) null, (Set) null, (Set) null, (Set) null);
      building0.getFoodOrders();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Building building0 = new Building("");
      Set<Room> set0 = building0.getRooms();
      building0.setBikeReservationsForBuildingEnd(set0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Building building0 = new Building("");
      Set set0 = building0.getBikeReservationsForBuildingStart();
      building0.setBikes(set0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Building building0 = new Building((-3553), (String) null, (String) null, (String) null);
      Set<BuildingFoodProduct> set0 = building0.getBuildingFoodProducts();
      building0.setFoodOrders(set0);
  }
}
