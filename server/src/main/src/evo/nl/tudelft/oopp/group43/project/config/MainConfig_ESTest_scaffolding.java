/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Sun Mar 22 21:50:47 GMT 2020
 */

package nl.tudelft.oopp.group43.project.config;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class MainConfig_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "nl.tudelft.oopp.group43.project.config.MainConfig"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/var/folders/bb/jflygsqs62q45k_4jdyk7knm0000gn/T/"); 
    java.lang.System.setProperty("user.country", "CN"); 
    java.lang.System.setProperty("user.dir", "/Users/skylove/CSE1105/repository-template/server/src/main"); 
    java.lang.System.setProperty("user.home", "/Users/skylove"); 
    java.lang.System.setProperty("user.language", "zh"); 
    java.lang.System.setProperty("user.name", "skylove"); 
    java.lang.System.setProperty("user.timezone", "Europe/Amsterdam"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MainConfig_ESTest_scaffolding.class.getClassLoader() ,
      "org.springframework.util.ReflectionUtils$FieldFilter",
      "org.springframework.mail.MailParseException",
      "org.springframework.data.repository.config.BootstrapMode",
      "org.springframework.util.ConcurrentReferenceHashMap$Reference",
      "org.springframework.mail.MailMessage",
      "org.springframework.util.ConcurrentReferenceHashMap$Segment",
      "org.springframework.context.annotation.ComponentScan$Filter",
      "org.springframework.dao.support.PersistenceExceptionTranslator",
      "org.springframework.transaction.TransactionManager",
      "org.springframework.transaction.TransactionSystemException",
      "org.springframework.orm.jpa.JpaTransactionManager",
      "org.springframework.core.Constants",
      "org.springframework.mail.MailPreparationException",
      "org.springframework.transaction.CannotCreateTransactionException",
      "org.springframework.core.io.Resource",
      "org.springframework.core.NestedRuntimeException",
      "org.springframework.mail.MailSender",
      "org.springframework.orm.jpa.AbstractEntityManagerFactoryBean",
      "org.springframework.mail.javamail.JavaMailSender",
      "org.springframework.transaction.UnexpectedRollbackException",
      "org.springframework.transaction.SavepointManager",
      "org.springframework.transaction.InvalidIsolationLevelException",
      "org.springframework.orm.jpa.JpaVendorAdapter",
      "org.springframework.data.repository.config.DefaultRepositoryBaseClass",
      "org.springframework.data.repository.core.support.TransactionalRepositoryFactoryBeanSupport",
      "org.springframework.context.annotation.Configuration",
      "org.springframework.mail.MailSendException",
      "org.springframework.transaction.PlatformTransactionManager",
      "org.springframework.mail.javamail.MimeMessagePreparator",
      "org.springframework.mail.javamail.JavaMailSenderImpl",
      "org.springframework.util.CollectionUtils",
      "org.springframework.beans.factory.DisposableBean",
      "org.springframework.core.io.InputStreamSource",
      "org.springframework.orm.jpa.JpaDialect",
      "org.springframework.transaction.TransactionStatus",
      "org.springframework.beans.factory.BeanClassLoaderAware",
      "org.springframework.util.ConcurrentReferenceHashMap$Task",
      "org.springframework.mail.MailException",
      "org.springframework.transaction.support.ResourceTransactionManager",
      "org.springframework.dao.DataAccessException",
      "org.springframework.transaction.TransactionDefinition",
      "org.springframework.transaction.TransactionExecution",
      "org.springframework.core.io.ClassPathResource",
      "org.springframework.beans.factory.Aware",
      "org.springframework.mail.SimpleMailMessage",
      "org.springframework.transaction.IllegalTransactionStateException",
      "org.springframework.transaction.annotation.EnableTransactionManagement",
      "org.springframework.mail.MailAuthenticationException",
      "org.springframework.beans.factory.InitializingBean",
      "org.springframework.util.ConcurrentReferenceHashMap$ReferenceManager",
      "org.springframework.util.ConcurrentReferenceHashMap",
      "org.springframework.util.ConcurrentReferenceHashMap$ReferenceType",
      "org.springframework.core.io.AbstractFileResolvingResource",
      "org.springframework.data.repository.core.support.RepositoryFactoryInformation",
      "org.springframework.beans.factory.FactoryBean",
      "org.springframework.beans.factory.BeanFactoryAware",
      "org.springframework.orm.jpa.DefaultJpaDialect",
      "org.springframework.core.Constants$ConstantException",
      "org.springframework.beans.factory.BeanNameAware",
      "org.springframework.context.ApplicationEventPublisherAware",
      "org.springframework.util.ConcurrentReferenceHashMap$1",
      "org.springframework.orm.jpa.EntityManagerFactoryInfo",
      "org.springframework.util.ConcurrentReferenceHashMap$2",
      "org.springframework.util.ConcurrentReferenceHashMap$3",
      "org.springframework.util.ConcurrentReferenceHashMap$4",
      "org.springframework.transaction.TransactionSuspensionNotSupportedException",
      "org.springframework.transaction.support.AbstractPlatformTransactionManager",
      "org.springframework.data.repository.query.QueryLookupStrategy$Key",
      "org.springframework.context.annotation.AdviceMode",
      "org.springframework.context.ResourceLoaderAware",
      "org.springframework.context.annotation.Import",
      "org.springframework.transaction.TransactionUsageException",
      "org.springframework.util.MultiValueMap",
      "org.springframework.beans.BeansException",
      "org.springframework.core.NestedIOException",
      "org.springframework.core.io.AbstractResource",
      "org.springframework.stereotype.Component",
      "org.springframework.util.ReflectionUtils$MethodFilter",
      "org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean",
      "nl.tudelft.oopp.group43.project.config.MainConfig",
      "org.springframework.util.ReflectionUtils",
      "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport",
      "org.springframework.transaction.InvalidTimeoutException",
      "org.springframework.beans.factory.BeanFactory",
      "org.springframework.transaction.TransactionException",
      "org.springframework.transaction.NestedTransactionNotSupportedException",
      "org.springframework.mail.javamail.SmartMimeMessage",
      "org.springframework.context.weaving.LoadTimeWeaverAware",
      "org.springframework.mail.javamail.ConfigurableMimeFileTypeMap",
      "org.springframework.util.ConcurrentReferenceHashMap$5",
      "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean",
      "org.springframework.data.jpa.repository.config.EnableJpaRepositories",
      "org.springframework.util.Assert",
      "org.springframework.util.StringUtils"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("javax.persistence.EntityManagerFactory", false, MainConfig_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MainConfig_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "nl.tudelft.oopp.group43.project.config.MainConfig",
      "org.springframework.data.repository.query.QueryLookupStrategy$Key",
      "org.springframework.data.repository.config.BootstrapMode",
      "org.springframework.context.annotation.AdviceMode",
      "org.springframework.beans.factory.annotation.Autowire",
      "org.springframework.core.Constants",
      "org.springframework.util.Assert",
      "org.springframework.util.ConcurrentReferenceHashMap$ReferenceType",
      "org.springframework.util.ConcurrentReferenceHashMap",
      "org.springframework.util.ConcurrentReferenceHashMap$Segment",
      "org.springframework.util.ConcurrentReferenceHashMap$ReferenceManager",
      "org.springframework.util.ReflectionUtils",
      "org.springframework.transaction.support.AbstractPlatformTransactionManager",
      "org.springframework.orm.jpa.JpaTransactionManager",
      "org.springframework.orm.jpa.DefaultJpaDialect",
      "com.zaxxer.hikari.HikariConfig",
      "com.mysql.cj.jdbc.AbandonedConnectionCleanupThread",
      "com.mysql.cj.jdbc.NonRegisteringDriver",
      "org.postgresql.util.SharedTimer",
      "org.postgresql.Driver",
      "com.mysql.cj.jdbc.Driver",
      "com.zaxxer.hikari.HikariDataSource",
      "com.zaxxer.hikari.util.UtilityElf",
      "com.zaxxer.hikari.pool.PoolBase",
      "com.zaxxer.hikari.pool.HikariPool",
      "com.zaxxer.hikari.util.DriverDataSource",
      "com.mysql.cj.util.LRUCache",
      "com.mysql.cj.conf.ConnectionUrl",
      "com.mysql.cj.conf.ConnectionUrlParser",
      "com.mysql.cj.util.StringUtils$SearchMode",
      "com.mysql.cj.util.StringUtils",
      "com.mysql.cj.conf.ConnectionUrl$HostsCardinality",
      "com.mysql.cj.conf.PropertyKey",
      "com.mysql.cj.conf.ConnectionUrl$Type",
      "com.zaxxer.hikari.pool.PoolBase$SynchronousExecutor",
      "com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator",
      "com.zaxxer.hikari.util.ConcurrentBag",
      "com.zaxxer.hikari.util.SuspendResumeLock$1",
      "com.zaxxer.hikari.util.SuspendResumeLock",
      "com.zaxxer.hikari.util.UtilityElf$DefaultThreadFactory",
      "com.zaxxer.hikari.util.ClockSource$Factory",
      "com.zaxxer.hikari.util.ClockSource$MillisecondClockSource",
      "com.zaxxer.hikari.util.ClockSource",
      "com.zaxxer.hikari.pool.PoolEntry",
      "com.mysql.cj.conf.ConnectionUrlParser$Pair",
      "com.mysql.cj.conf.HostInfo",
      "com.mysql.cj.Messages",
      "com.mysql.cj.Constants",
      "com.mysql.cj.util.Util",
      "com.mysql.cj.conf.url.SingleConnectionUrl",
      "com.mysql.cj.jdbc.NonRegisteringDriver$1",
      "com.mysql.cj.jdbc.ConnectionImpl",
      "com.mysql.cj.conf.DefaultPropertySet",
      "com.mysql.cj.jdbc.JdbcPropertySetImpl",
      "com.mysql.cj.conf.AbstractPropertyDefinition",
      "com.mysql.cj.conf.StringPropertyDefinition",
      "com.mysql.cj.conf.BooleanPropertyDefinition",
      "com.mysql.cj.conf.EnumPropertyDefinition",
      "com.mysql.cj.conf.PropertyDefinitions$DatabaseTerm",
      "com.mysql.cj.conf.IntegerPropertyDefinition",
      "com.mysql.cj.conf.PropertyDefinitions$SslMode",
      "com.mysql.cj.conf.MemorySizePropertyDefinition",
      "com.mysql.cj.conf.PropertyDefinitions$ZeroDatetimeBehavior",
      "com.mysql.cj.conf.LongPropertyDefinition",
      "com.mysql.cj.conf.PropertyDefinitions$XdevapiSslMode",
      "com.mysql.cj.conf.PropertyDefinitions$AuthMech",
      "com.mysql.cj.conf.PropertyDefinitions",
      "com.mysql.cj.conf.AbstractRuntimeProperty",
      "com.mysql.cj.conf.BooleanProperty",
      "com.mysql.cj.conf.EnumProperty",
      "com.mysql.cj.conf.StringProperty",
      "com.mysql.cj.conf.IntegerProperty",
      "com.mysql.cj.conf.MemorySizeProperty",
      "com.mysql.cj.conf.LongProperty",
      "com.mysql.cj.jdbc.result.ResultSetFactory",
      "com.mysql.cj.protocol.Resultset$Type",
      "com.mysql.cj.protocol.Resultset$Concurrency",
      "com.mysql.cj.log.NullLogger",
      "com.mysql.cj.CoreSession",
      "com.mysql.cj.NativeSession",
      "com.mysql.cj.log.LogFactory",
      "com.mysql.cj.log.StandardLogger",
      "com.mysql.cj.protocol.a.NativeMessageBuilder",
      "com.mysql.cj.jdbc.DatabaseMetaData",
      "com.mysql.cj.protocol.AbstractSocketConnection",
      "com.mysql.cj.protocol.a.NativeSocketConnection",
      "com.mysql.cj.protocol.StandardSocketFactory",
      "com.mysql.cj.protocol.a.NativeSocketConnection$1",
      "com.mysql.cj.exceptions.ExceptionFactory",
      "com.mysql.cj.exceptions.CJException",
      "com.mysql.cj.exceptions.CJCommunicationsException",
      "com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping",
      "com.mysql.cj.jdbc.exceptions.SQLError",
      "com.mysql.cj.jdbc.exceptions.CommunicationsException",
      "org.springframework.mail.javamail.JavaMailSenderImpl",
      "org.springframework.mail.javamail.ConfigurableMimeFileTypeMap",
      "org.springframework.core.io.AbstractResource",
      "org.springframework.core.io.AbstractFileResolvingResource",
      "org.springframework.core.io.ClassPathResource",
      "org.springframework.util.StringUtils",
      "org.springframework.util.CollectionUtils",
      "org.springframework.orm.jpa.AbstractEntityManagerFactoryBean",
      "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean",
      "org.springframework.core.type.filter.AbstractTypeHierarchyTraversingFilter",
      "org.springframework.core.type.filter.AnnotationTypeFilter",
      "org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager",
      "org.springframework.jndi.JndiAccessor",
      "org.springframework.jndi.JndiLocatorSupport",
      "org.springframework.jdbc.datasource.lookup.JndiDataSourceLookup",
      "org.springframework.jndi.JndiTemplate",
      "org.springframework.util.ClassUtils",
      "org.springframework.core.io.support.PathMatchingResourcePatternResolver",
      "org.springframework.util.AntPathMatcher",
      "org.springframework.util.AntPathMatcher$PathSeparatorPatternCache",
      "org.springframework.core.io.DefaultResourceLoader"
    );
  }
}
