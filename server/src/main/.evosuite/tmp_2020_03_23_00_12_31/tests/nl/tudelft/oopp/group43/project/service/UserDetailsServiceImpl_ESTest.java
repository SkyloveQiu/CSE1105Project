/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 22 23:14:07 GMT 2020
 */

package nl.tudelft.oopp.group43.project.service;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Set;
import nl.tudelft.oopp.group43.project.models.User;
import nl.tudelft.oopp.group43.project.repositories.UserRepository;
import nl.tudelft.oopp.group43.project.service.UserDetailsServiceImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UserDetailsServiceImpl_ESTest extends UserDetailsServiceImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      UserDetailsServiceImpl userDetailsServiceImpl0 = new UserDetailsServiceImpl();
      User user0 = mock(User.class, new ViolatedAssumptionAnswer());
      doReturn((Set) null).when(user0).getRoles();
      UserRepository userRepository0 = mock(UserRepository.class, new ViolatedAssumptionAnswer());
      doReturn(user0).when(userRepository0).findByUsername(anyString());
      Injector.inject(userDetailsServiceImpl0, (Class<?>) UserDetailsServiceImpl.class, "userRepository", (Object) userRepository0);
      Injector.validateBean(userDetailsServiceImpl0, (Class<?>) UserDetailsServiceImpl.class);
      // Undeclared exception!
      try { 
        userDetailsServiceImpl0.loadUserByUsername("Hu&iS_wAEjeT<T");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("nl.tudelft.oopp.group43.project.service.UserDetailsServiceImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      UserDetailsServiceImpl userDetailsServiceImpl0 = new UserDetailsServiceImpl();
      UserRepository userRepository0 = mock(UserRepository.class, new ViolatedAssumptionAnswer());
      doReturn((User) null).when(userRepository0).findByUsername(anyString());
      Injector.inject(userDetailsServiceImpl0, (Class<?>) UserDetailsServiceImpl.class, "userRepository", (Object) userRepository0);
      Injector.validateBean(userDetailsServiceImpl0, (Class<?>) UserDetailsServiceImpl.class);
      // Undeclared exception!
      try { 
        userDetailsServiceImpl0.loadUserByUsername("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 
         //
         verifyException("nl.tudelft.oopp.group43.project.service.UserDetailsServiceImpl", e);
      }
  }
}
