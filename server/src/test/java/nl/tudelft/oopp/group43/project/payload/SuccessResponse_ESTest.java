/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 22 21:47:47 GMT 2020
 */

package nl.tudelft.oopp.group43.project.payload;

import static org.junit.Assert.assertEquals;

import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.test.context.junit4.SpringRunner;

@RunWith(SpringRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class SuccessResponse_ESTest extends SuccessResponse_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0() throws Throwable {
        SuccessResponse successResponse0 = new SuccessResponse("", 0);
        assertEquals(0, successResponse0.getStatus());

        successResponse0.setStatus(1);
        int int0 = successResponse0.getStatus();
        assertEquals(1, int0);
    }

    @Test(timeout = 4000)
    public void test1() throws Throwable {
        SuccessResponse successResponse0 = new SuccessResponse("mKKuK?G&q=]}q", (-1758));
        int int0 = successResponse0.getStatus();
        assertEquals((-1758), int0);
    }

    @Test(timeout = 4000)
    public void test2() throws Throwable {
        SuccessResponse successResponse0 = new SuccessResponse((String) null, 2095);
        successResponse0.getMessage();
        assertEquals(2095, successResponse0.getStatus());
    }

    @Test(timeout = 4000)
    public void test3() throws Throwable {
        SuccessResponse successResponse0 = new SuccessResponse("mKKuK?G&q=]}q", (-1758));
        successResponse0.getMessage();
        assertEquals((-1758), successResponse0.getStatus());
    }

    @Test(timeout = 4000)
    public void test4() throws Throwable {
        SuccessResponse successResponse0 = new SuccessResponse("", 0);
        int int0 = successResponse0.getStatus();
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test5() throws Throwable {
        SuccessResponse successResponse0 = new SuccessResponse("", 0);
        successResponse0.setMessage("");
        assertEquals(0, successResponse0.getStatus());
    }

    @Test(timeout = 4000)
    public void test6() throws Throwable {
        SuccessResponse successResponse0 = new SuccessResponse("", 0);
        successResponse0.getMessage();
        assertEquals(0, successResponse0.getStatus());
    }
}
