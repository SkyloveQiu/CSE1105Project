/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 22 21:48:29 GMT 2020
 */

package nl.tudelft.oopp.group43.project.payload;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;

import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.test.context.junit4.SpringRunner;

@RunWith(SpringRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class JwtResponesTest extends JwtResponesTestScaffolding {

    @Test(timeout = 4000)
    public void test00() throws Throwable {
        JwtRespones jwtRespones0 = new JwtRespones("", "(@v;p,ww", "(@v;p,ww", "", "(@v;p,ww", 0);
        assertEquals("(@v;p,ww", jwtRespones0.getRole());
        assertEquals("(@v;p,ww", jwtRespones0.getLastName());
        assertEquals(0, jwtRespones0.getStatus());
        assertEquals("", jwtRespones0.getFirstName());
        String string0 = jwtRespones0.getUsername();
        assertEquals("(@v;p,ww", string0);
        assertEquals("", jwtRespones0.getToken());
        assertEquals("Bearer", jwtRespones0.getType());
    }

    @Test(timeout = 4000)
    public void test01() throws Throwable {
        JwtRespones jwtRespones0 = new JwtRespones("k*j<<}", "k*j<<}", "k*j<<}", "", "", 2445);
        assertEquals("k*j<<}", jwtRespones0.getUsername());

        jwtRespones0.setUsername("");
        jwtRespones0.getUsername();
        assertEquals("k*j<<}", jwtRespones0.getToken());
    }

    @Test(timeout = 4000)
    public void test02() throws Throwable {
        JwtRespones jwtRespones0 = new JwtRespones("", "[q0znk[2*_rA<@V9%", "", "e;s{O[Xx", "", 0);
        assertEquals("Bearer", jwtRespones0.getType());

        jwtRespones0.setType((String) null);
        jwtRespones0.getType();
        assertEquals("", jwtRespones0.getToken());
        assertEquals("[q0znk[2*_rA<@V9%", jwtRespones0.getUsername());
        assertEquals(0, jwtRespones0.getStatus());
        assertEquals("e;s{O[Xx", jwtRespones0.getFirstName());
        assertEquals("", jwtRespones0.getLastName());
        assertEquals("", jwtRespones0.getRole());
    }

    @Test(timeout = 4000)
    public void test03() throws Throwable {
        JwtRespones jwtRespones0 = new JwtRespones("k*j<<}", "k*j<<}", "k*j<<}", "", "", 2445);
        assertEquals("Bearer", jwtRespones0.getType());

        jwtRespones0.setType("");
        jwtRespones0.getType();
        assertEquals("k*j<<}", jwtRespones0.getToken());
    }

    @Test(timeout = 4000)
    public void test04() throws Throwable {
        JwtRespones jwtRespones0 = new JwtRespones((String) null, (String) null, (String) null, (String) null, (String) null, 0);
        jwtRespones0.getToken();
        assertEquals("Bearer", jwtRespones0.getType());
        assertEquals(0, jwtRespones0.getStatus());
    }

    @Test(timeout = 4000)
    public void test05() throws Throwable {
        JwtRespones jwtRespones0 = new JwtRespones("", "", "", "s?3.wj_w;ei]", "s?3.wj_w;ei]", 0);
        assertEquals("s?3.wj_w;ei]", jwtRespones0.getFirstName());
        assertEquals("Bearer", jwtRespones0.getType());
        assertEquals("", jwtRespones0.getRole());
        assertEquals(0, jwtRespones0.getStatus());
        String string0 = jwtRespones0.getToken();
        assertEquals("s?3.wj_w;ei]", jwtRespones0.getLastName());
        assertEquals("", string0);
        assertEquals("", jwtRespones0.getUsername());
    }

    @Test(timeout = 4000)
    public void test06() throws Throwable {
        JwtRespones jwtRespones0 = new JwtRespones("", "[q0znk[2*_rA<@V9%", "", "e;s{O[Xx", "", 0);
        int int0 = jwtRespones0.getStatus();
        assertEquals("", jwtRespones0.getRole());
        assertEquals(0, int0);
        assertEquals("Bearer", jwtRespones0.getType());
        assertEquals("", jwtRespones0.getLastName());
        assertEquals("e;s{O[Xx", jwtRespones0.getFirstName());
        assertEquals("[q0znk[2*_rA<@V9%", jwtRespones0.getUsername());
        assertEquals("", jwtRespones0.getToken());
    }

    @Test(timeout = 4000)
    public void test07() throws Throwable {
        JwtRespones jwtRespones0 = new JwtRespones("k*j<<}", "k*j<<}", "k*j<<}", "", "", 2445);
        int int0 = jwtRespones0.getStatus();
        assertEquals(2445, int0);
        assertEquals("k*j<<}", jwtRespones0.getUsername());
        assertEquals("k*j<<}", jwtRespones0.getToken());
        assertEquals("Bearer", jwtRespones0.getType());
        assertEquals("k*j<<}", jwtRespones0.getRole());
        assertEquals("", jwtRespones0.getFirstName());
        assertEquals("", jwtRespones0.getLastName());
    }

    @Test(timeout = 4000)
    public void test08() throws Throwable {
        JwtRespones jwtRespones0 = new JwtRespones("U66`Q<90-qybR", "U66`Q<90-qybR", "U66`Q<90-qybR", "1[^R}`7jDM", "ub_*Je4", (-1129));
        assertEquals((-1129), jwtRespones0.getStatus());
        assertEquals("ub_*Je4", jwtRespones0.getLastName());
        assertEquals("U66`Q<90-qybR", jwtRespones0.getToken());
        assertEquals("U66`Q<90-qybR", jwtRespones0.getUsername());
        assertEquals("Bearer", jwtRespones0.getType());
        String string0 = jwtRespones0.getRole();
        assertEquals("U66`Q<90-qybR", string0);
        assertEquals("1[^R}`7jDM", jwtRespones0.getFirstName());
    }

    @Test(timeout = 4000)
    public void test09() throws Throwable {
        JwtRespones jwtRespones0 = new JwtRespones("", "[q0znk[2*_rA<@V9%", "", "e;s{O[Xx", "", 0);
        assertEquals("", jwtRespones0.getLastName());

        jwtRespones0.setLastName("e;s{O[Xx");
        jwtRespones0.getLastName();
        assertEquals("", jwtRespones0.getRole());
    }

    @Test(timeout = 4000)
    public void test10() throws Throwable {
        JwtRespones jwtRespones0 = new JwtRespones("YY[t>Og}V!bXLQvoWq", (String) null, "", (String) null, "", (-1364));
        String string0 = jwtRespones0.getLastName();
        assertEquals((-1364), jwtRespones0.getStatus());
        assertEquals("Bearer", jwtRespones0.getType());
        assertNotNull(string0);
        assertEquals("", jwtRespones0.getRole());
        assertEquals("YY[t>Og}V!bXLQvoWq", jwtRespones0.getToken());
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test11() throws Throwable {
        JwtRespones jwtRespones0 = new JwtRespones("YY[t>Og}V!bXLQvoWq", (String) null, "", (String) null, "", (-1364));
        assertEquals("YY[t>Og}V!bXLQvoWq", jwtRespones0.getToken());
        assertEquals("", jwtRespones0.getRole());
        String string0 = jwtRespones0.getFirstName();
        assertEquals("Bearer", jwtRespones0.getType());
        assertEquals("", jwtRespones0.getLastName());
        assertNull(string0);
        assertEquals((-1364), jwtRespones0.getStatus());
    }

    @Test(timeout = 4000)
    public void test12() throws Throwable {
        JwtRespones jwtRespones0 = new JwtRespones("j4l}Pu@FrKdq9MGl0\"j", "j4l}Pu@FrKdq9MGl0\"j", "j4l}Pu@FrKdq9MGl0\"j", "j4l}Pu@FrKdq9MGl0\"j", "j4l}Pu@FrKdq9MGl0\"j", (-1));
        jwtRespones0.getFirstName();
        assertEquals((-1), jwtRespones0.getStatus());
        assertEquals("Bearer", jwtRespones0.getType());
    }

    @Test(timeout = 4000)
    public void test13() throws Throwable {
        JwtRespones jwtRespones0 = new JwtRespones((String) null, (String) null, (String) null, "", (String) null, (-1359));
        String string0 = jwtRespones0.getRole();
        assertEquals("Bearer", jwtRespones0.getType());
        assertNull(string0);
        assertEquals((-1359), jwtRespones0.getStatus());
    }

    @Test(timeout = 4000)
    public void test14() throws Throwable {
        JwtRespones jwtRespones0 = new JwtRespones("YY[t>Og}V!bXLQvoWq", (String) null, "", (String) null, "", (-1364));
        String string0 = jwtRespones0.getUsername();
        assertNull(string0);
        assertEquals((-1364), jwtRespones0.getStatus());
        assertEquals("", jwtRespones0.getLastName());
        assertEquals("YY[t>Og}V!bXLQvoWq", jwtRespones0.getToken());
        assertEquals("", jwtRespones0.getRole());
        assertEquals("Bearer", jwtRespones0.getType());
    }

    @Test(timeout = 4000)
    public void test15() throws Throwable {
        JwtRespones jwtRespones0 = new JwtRespones((String) null, (String) null, (String) null, "", (String) null, (-1359));
        jwtRespones0.setRole("");
        jwtRespones0.getRole();
        assertEquals((-1359), jwtRespones0.getStatus());
        assertEquals("Bearer", jwtRespones0.getType());
    }

    @Test(timeout = 4000)
    public void test16() throws Throwable {
        JwtRespones jwtRespones0 = new JwtRespones((String) null, (String) null, (String) null, "", (String) null, (-1359));
        String string0 = jwtRespones0.getLastName();
        assertEquals((-1359), jwtRespones0.getStatus());
        assertEquals("Bearer", jwtRespones0.getType());
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test17() throws Throwable {
        JwtRespones jwtRespones0 = new JwtRespones((String) null, "*{^!K`VXj^Y", (String) null, "*{^!K`VXj^Y", (String) null, (-1));
        jwtRespones0.setFirstName("Bearer");
        assertEquals((-1), jwtRespones0.getStatus());
        assertEquals("Bearer", jwtRespones0.getType());
    }

    @Test(timeout = 4000)
    public void test18() throws Throwable {
        JwtRespones jwtRespones0 = new JwtRespones("YY[t>Og}V!bXLQvoWq", (String) null, "", (String) null, "", (-1364));
        jwtRespones0.setStatus((-1364));
        assertEquals((-1364), jwtRespones0.getStatus());
        assertEquals("", jwtRespones0.getLastName());
        assertEquals("YY[t>Og}V!bXLQvoWq", jwtRespones0.getToken());
        assertEquals("", jwtRespones0.getRole());
        assertEquals("Bearer", jwtRespones0.getType());
    }

    @Test(timeout = 4000)
    public void test19() throws Throwable {
        JwtRespones jwtRespones0 = new JwtRespones((String) null, (String) null, (String) null, "", (String) null, (-1359));
        String string0 = jwtRespones0.getFirstName();
        assertEquals((-1359), jwtRespones0.getStatus());
        assertEquals("Bearer", jwtRespones0.getType());
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test20() throws Throwable {
        JwtRespones jwtRespones0 = new JwtRespones("esDvi@$ZD*}GC>!^\"]", "esDvi@$ZD*}GC>!^\"]", "n:jpY", "n:jpY", "", 0);
        assertEquals("Bearer", jwtRespones0.getType());
        assertEquals("n:jpY", jwtRespones0.getFirstName());
        assertEquals("", jwtRespones0.getLastName());
        String string0 = jwtRespones0.getToken();
        assertEquals("esDvi@$ZD*}GC>!^\"]", string0);
        assertEquals("n:jpY", jwtRespones0.getRole());
        assertEquals(0, jwtRespones0.getStatus());
        assertEquals("esDvi@$ZD*}GC>!^\"]", jwtRespones0.getUsername());
    }

    @Test(timeout = 4000)
    public void test21() throws Throwable {
        JwtRespones jwtRespones0 = new JwtRespones((String) null, "*{^!K`VXj^Y", (String) null, "*{^!K`VXj^Y", (String) null, (-1));
        int int0 = jwtRespones0.getStatus();
        assertEquals("Bearer", jwtRespones0.getType());
        assertEquals((-1), int0);
    }

    @Test(timeout = 4000)
    public void test22() throws Throwable {
        JwtRespones jwtRespones0 = new JwtRespones("k*j<<}", "k*j<<}", "k*j<<}", "", "", 2445);
        assertEquals("", jwtRespones0.getFirstName());
        assertEquals("k*j<<}", jwtRespones0.getRole());
        assertEquals(2445, jwtRespones0.getStatus());
        assertEquals("", jwtRespones0.getLastName());
        String string0 = jwtRespones0.getType();
        assertEquals("Bearer", string0);
        assertEquals("k*j<<}", jwtRespones0.getToken());
        assertEquals("k*j<<}", jwtRespones0.getUsername());
    }

    @Test(timeout = 4000)
    public void test23() throws Throwable {
        JwtRespones jwtRespones0 = new JwtRespones((String) null, (String) null, (String) null, "", (String) null, (-1359));
        jwtRespones0.setToken("u$$Q9N`149.x4");
        assertEquals("Bearer", jwtRespones0.getType());
        assertEquals((-1359), jwtRespones0.getStatus());
    }
}
